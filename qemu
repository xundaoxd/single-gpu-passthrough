#!/bin/bash
set -xe

die() {
    echo "$@"
    exit 1
}

exec() {
    "$@"
    exit 0
}

write_file() {
    [[ ! -w $1 ]] && die "cannot write to $1"
    echo "$2" > "$1"
}

if [[ $UID != 0 ]]; then
    die "must run as root"
fi

if [[ $PPID != 1 ]]; then
    if which daemonize; then
        mkdir -p log
        exec daemonize -c "$PWD" -v -o log/out.log -e log/err.log "$(realpath "$0")" "$@"
    fi
    die "please install daemonize: yay -S daemonize"
fi

post_hooks=()
run_post_hooks() {
    for ((i = ${#post_hooks[@]}; i >= 0; i--)); do
        ${post_hooks[i]}
    done
}
trap "run_post_hooks" EXIT

if systemctl is-active --quiet display-manager.service; then
    systemctl stop display-manager.service
    while systemctl is-active --quiet display-manager.service; do
        sleep 1
    done
    post_hooks+=("systemctl start display-manager.service")
fi

for vtc in /sys/class/vtconsole/vtcon*; do
    write_file "$vtc/bind" 0
    post_hooks+=("write_file $vtc/bind 1")
done

# efi unbind
# not need on my compute
# write_file /sys/bus/platform/drivers/efi-framebuffer/unbind efi-framebuffer.0
# post_hooks+=("write_file /sys/bus/platform/drivers/efi-framebuffer/bind efi-framebuffer.0")

# basic options
qemu_args=(
    "-nodefaults"
    "-nographic"
    "-display" "none"
    "-vga" "none"
    "-blockdev" '{"driver":"file","filename":"/usr/share/edk2-ovmf/x64/OVMF_CODE.fd","node-name":"pflash0-storage","auto-read-only":true,"discard":"unmap"}'
    "-blockdev" '{"node-name":"pflash0-format","read-only":true,"driver":"raw","file":"pflash0-storage"}'
    "-machine" "pc-q35-7.1,accel=kvm,usb=off,vmport=off,kernel_irqchip=on,dump-guest-core=off,pflash0=pflash0-format,hpet=off,acpi=on"
    "-smp" "24"
    "-cpu" "host,migratable=on,topoext=on,hypervisor=off,hv-time=on,hv-relaxed=on,hv-vapic=on,hv-spinlocks=0x1fff,hv-vendor-id=123456789ab,kvm=off,kvm-hint-dedicated=on"
    "-m" "32G"

    "-smbios" 'type=0,vendor=American Megatrends Inc.,version=0309,date=08/16/2021,release=5.17'
    "-smbios" 'type=1,manufacturer=System manufacturer,product=System Product Name,version=System Version,serial=System Serial Number,sku=SKU,family=To be filled by O.E.M.'
    "-smbios" 'type=2,manufacturer=ASUSTeK COMPUTER INC.,product=ROG STRIX X570-E GAMING WIFI II,version=Rev X.0x,serial=210890780700315,asset=Default string,location=Default string'
    "-smbios" 'type=3,manufacturer=Default string,version=Default string,serial=Default string,asset=Default string,sku=Default string'
    "-smbios" 'type=11,value=Default string,value=Default string,value=Default string,value=Default string,value=Default string,value=Default string,value=Default string,value=Default string'

    "-global" "kvm-pit.lost_tick_policy=delay"
    "-global" "ICH9-LPC.disable_s3=1"
    "-global" "ICH9-LPC.disable_s4=1"
    "-global" "ICH9-LPC.noreboot=off"

    "-sandbox" "on,obsolete=deny,elevateprivileges=deny,spawn=deny,resourcecontrol=deny"

    "-boot" "menu=on"
)

# gpu passthrough
virsh nodedev-detach pci_0000_0b_00_0
virsh nodedev-detach pci_0000_0b_00_1
qemu_args+=(
    "-device" "vfio-pci,host=0b:00.0,x-vga=on,multifunction=on,romfile=rom/Gigabyte.RTX3090.24576.210315_3.rom"
    "-device" "vfio-pci,host=0b:00.1"
)
post_hooks+=("virsh nodedev-reattach pci_0000_0b_00_0" "virsh nodedev-reattach pci_0000_0b_00_1")

# usb passthrough
qemu_args+=(
    "-usb"
    "-device" "qemu-xhci"
    "-device" "usb-host,vendorid=0x05ac,productid=0x024f"   # keyboard
    "-device" "usb-host,vendorid=0x046d,productid=0xc53f"   # mouse
    "-device" "usb-host,vendorid=0x045e,productid=0x028e"   # xbox360
    "-device" "usb-host,vendorid=0x0bda,productid=0x8771"   # bluetooth
)

# network setup
qemu_args+=(
    # "-nic" "user,model=virtio-net-pci"
    "-nic" "user,model=e1000,mac=52:54:98:76:54:32"
)

# disk
qemu_args+=(
    "-drive" "file=/dev/nvme1n1p1,if=virtio,media=disk,cache=none,format=raw"
)

systemd-inhibit --what=sleep --mode=block sleep infinity &
post_hooks+=("kill $!")

qemu-system-x86_64 "${qemu_args[@]}" "$@"

